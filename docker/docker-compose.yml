version: "3"

services:
  cronicorn-web:
    networks:
      - cronicorn
    build:
      context: ../
      dockerfile: docker/Dockerfile.web
    depends_on:
      cronicorn-api:
        condition: service_started
    ports:
      - 3000:80
    restart: unless-stopped

  cronicorndb:
    image: postgres:17
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cronicorn
    volumes:
      - "../files/crondbvolume:/var/lib/postgresql/data"
  cronicorn-api:
    container_name: prod-cronicorn-api
    restart: unless-stopped
    depends_on:
      cronicorndb:
        condition: service_healthy
    build:
      context: ../
      dockerfile: docker/Dockerfile.api
    networks:
      - cronicorn
    # ports:
    #    - 3001:9999
    environment:
      DATABASE_URL: ${DATABASE_URL}
      AUTH_SECRET: ${AUTH_SECRET}
      AUTH_URL: ${AUTH_URL}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
networks:
  cronicorn:
    driver: bridge
