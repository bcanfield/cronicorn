/* eslint-disable eslint-comments/no-unlimited-disable */

/* eslint-disable */

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/~__root'
import { Route as LoginRouteImport } from './routes/~login'
import { Route as DashboardRouteRouteImport } from './routes/~dashboard/~route'
import { Route as IndexRouteImport } from './routes/~index'
import { Route as DashboardIndexRouteImport } f./ routes / index.specoard / ~index'
import { Route as DashboardJobsCreateRouteImport } from './routes/~dashboard/~jobs.create'
import { Route as DashboardJobsJobIdRouteImport } from './routes/~dashboard/~jobs.$jobId'
import { Route as DashboardJobsJobIdEditRouteImport } from './routes/~dashboard/~jobs.$jobId.edit'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardJobsCreateRoute = DashboardJobsCreateRouteImport.update({
  id: '/jobs/create',
  path: '/jobs/create',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardJobsJobIdRoute = DashboardJobsJobIdRouteImport.update({
  id: '/jobs/$jobId',
  path: '/jobs/$jobId',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardJobsJobIdEditRoute = DashboardJobsJobIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => DashboardJobsJobIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/jobs/$jobId': typeof DashboardJobsJobIdRouteWithChildren
  '/dashboard/jobs/create': typeof DashboardJobsCreateRoute
  '/dashboard/jobs/$jobId/edit': typeof DashboardJobsJobIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/jobs/$jobId': typeof DashboardJobsJobIdRouteWithChildren
  '/dashboard/jobs/create': typeof DashboardJobsCreateRoute
  '/dashboard/jobs/$jobId/edit': typeof DashboardJobsJobIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/jobs/$jobId': typeof DashboardJobsJobIdRouteWithChildren
  '/dashboard/jobs/create': typeof DashboardJobsCreateRoute
  '/dashboard/jobs/$jobId/edit': typeof DashboardJobsJobIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
  | '/'
  | '/dashboard'
  | '/login'
  | '/dashboard/'
  | '/dashboard/jobs/$jobId'
  | '/dashboard/jobs/create'
  | '/dashboard/jobs/$jobId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
  | '/'
  | '/login'
  | '/dashboard'
  | '/dashboard/jobs/$jobId'
  | '/dashboard/jobs/create'
  | '/dashboard/jobs/$jobId/edit'
  id:
  | '__root__'
  | '/'
  | '/dashboard'
  | '/login'
  | '/dashboard/'
  | '/dashboard/jobs/$jobId'
  | '/dashboard/jobs/create'
  | '/dashboard/jobs/$jobId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/jobs/create': {
      id: '/dashboard/jobs/create'
      path: '/jobs/create'
      fullPath: '/dashboard/jobs/create'
      preLoaderRoute: typeof DashboardJobsCreateRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/jobs/$jobId': {
      id: '/dashboard/jobs/$jobId'
      path: '/jobs/$jobId'
      fullPath: '/dashboard/jobs/$jobId'
      preLoaderRoute: typeof DashboardJobsJobIdRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/jobs/$jobId/edit': {
      id: '/dashboard/jobs/$jobId/edit'
      path: '/edit'
      fullPath: '/dashboard/jobs/$jobId/edit'
      preLoaderRoute: typeof DashboardJobsJobIdEditRouteImport
      parentRoute: typeof DashboardJobsJobIdRoute
    }
  }
}

interface DashboardJobsJobIdRouteChildren {
  DashboardJobsJobIdEditRoute: typeof DashboardJobsJobIdEditRoute
}

const DashboardJobsJobIdRouteChildren: DashboardJobsJobIdRouteChildren = {
  DashboardJobsJobIdEditRoute: DashboardJobsJobIdEditRoute,
}

const DashboardJobsJobIdRouteWithChildren =
  DashboardJobsJobIdRoute._addFileChildren(DashboardJobsJobIdRouteChildren)

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardJobsJobIdRoute: typeof DashboardJobsJobIdRouteWithChildren
  DashboardJobsCreateRoute: typeof DashboardJobsCreateRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardJobsJobIdRoute: DashboardJobsJobIdRouteWithChildren,
  DashboardJobsCreateRoute: DashboardJobsCreateRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
